[
    // ST3 Fixes
    { "keys": ["super+shift+r"], "command": "goto_symbol_in_project" },

    // More Mac OSX-y
    { "keys": ["super+shift+f"], "command": "show_panel", "args": {"panel": "find_in_files"} },
    { "keys": ["super+ctrl+f"], "command": "show_panel", "args": {"panel": "find_in_files"} },

    { "keys": ["alt+up"], "command": "move_to", "args": {"to": "bol"},
        "context": [{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]},
    { "keys": ["alt+down"], "command": "move_to", "args": {"to": "eol"},
        "context": [{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]},
    { "keys": ["shift+alt+up"], "command": "move_to", "args": {"to": "bol", "extend": true}},
    { "keys": ["shift+alt+down"], "command": "move_to", "args": {"to": "eol", "extend": true}},
    { "keys": ["super+up"], "command": "move_to", "args": {"to": "bof"}},
    { "keys": ["super+down"], "command": "move_to", "args": {"to": "eof"}},

    // Faster finding
    { "keys": ["super+alt+g"], "command": "next_result" },
    { "keys": ["super+alt+shift+g"], "command": "prev_result" },

    // Line operations
    { "keys": ["super+shift+d"], "command": "duplicate_line" },
    { "keys": ["super+shift+k"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Line.sublime-macro"} },

    // Instant goto line & incremental
    { "keys": ["ctrl+g"], "command": "prompt_goto_line" },
    { "keys": ["super+f"], "command": "show_panel", "args": {"panel": "find", "reverse": false} },
    { "keys": ["super+g"], "command": "find_next", "args": {"reverse": false} },
    { "keys": ["super+shift+g"], "command": "find_prev", "args": {"reverse": false} },

    // Navigate through changes
    { "keys": ["alt+shift+n"], "command": "next_modification" },
    { "keys": ["alt+shift+e"], "command": "prev_modification" },

    // Add in UI hide/show
    { "keys": ["super+k","super+m"], "command": "toggle_minimap"},

    // More web-browser-y
    { "keys": ["super+t"], "command": "new_file" },

    // Make multiselection better
    { "keys": ["super+j", "super+i"], "command": "expand_selection", "args": {"to": "indentation"}},
    { "keys": ["super+q","super+l"], "command": "split_selection_into_lines" },
    { "keys": ["super+q","up"], "command": "select_lines", "args": {"forward": false} },
    { "keys": ["super+q","down"], "command": "select_lines", "args": {"forward": true} },
    { "keys": ["super+q","super+up"], "command": "select_lines", "args": {"forward": false} },
    { "keys": ["super+q","super+down"], "command": "select_lines", "args": {"forward": true} },
    { "keys": ["super+alt+d"], "command": "add_next_word" },
    { "keys": ["super+k","super+alt+d"], "command": "add_next_word_skip" },
    { "keys": ["super+alt+k","super+alt+d"], "command": "add_next_word_skip" },

    // Fix paste with indentation as default, add reindent shortcut
    { "keys": ["super+v"], "command": "paste_and_indent" },
    { "keys": ["super+shift+v"], "command": "paste" },

    // Word deletion like terminal
    { "keys": ["alt+shift+d"], "command": "delete_word", "args": { "forward": false, "sub_words": true } },
    { "keys": ["alt+d"], "command": "delete_word", "args": { "forward": true, "sub_words": true } },

    // * wrapping
    { "keys": ["*"], "command": "insert_snippet", "args": {"contents": "*${0:$SELECTION}*"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },

    // Reimplement quote and bracket wrapping
    // This is built-in to Sublime but is bundled with annoying automatic
    // insertion of ) when you type ( in the setting auto_match_enabled
    { "keys": ["\""],
       "command": "insert_snippet",
       "args": {"contents": "\"${0:$SELECTION}\""},
       "context":
        [
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    { "keys": ["'"],
       "command": "insert_snippet",
       "args": {"contents": "'${0:$SELECTION}'"},
       "context":
        [
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    { "keys": ["("],
       "command": "insert_snippet",
       "args": {"contents": "(${0:$SELECTION})"},
       "context":
        [
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    { "keys": ["["],
       "command": "insert_snippet",
       "args": {"contents": "[${0:$SELECTION}]"},
       "context":
        [
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },

    // Smart quote wrapping
    { "keys": ["alt+["],
       "command": "insert_snippet",
       "args": {"contents": "“${0:$SELECTION}”"},
       "context":
        [
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    { "keys": ["alt+]"],
       "command": "insert_snippet",
       "args": {"contents": "‘${0:$SELECTION}’"},
       "context":
        [
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },

    // Stop cycling between snippet fields on tab - rarely desired
    { "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": false},
        "context":
        [
            { "key": "has_next_field", "operator": "equal", "operand": true }
        ]
    },
    { "keys": ["shift+tab"], "command": "noop", "context":
        [
            { "key": "has_prev_field", "operator": "equal", "operand": true }
        ]
    },
    { "keys": ["super+up"], "command": "prev_field", "context":
        [
            { "key": "has_prev_field", "operator": "equal", "operand": true }
        ]
    },
    { "keys": ["super+down"], "command": "next_field", "context":
        [
            { "key": "has_next_field", "operator": "equal", "operand": true }
        ]
    },

    /*
        User plugins
    */

    // fonts.py
    { "keys": ["super+0"], "command": "default_font_size" },

    /*
        My plugins
    */

    // Switch view in group
    { "keys": ["super+shift+]"], "command": "next_view_in_group" },
    { "keys": ["super+shift+["], "command": "prev_view_in_group" },

    /*
        Other plugins
    */

    // Smart Title Case
    { "keys": ["super+k","super+shift+u"], "command": "smart_title_case"},

    // SublimeLinter
    { "keys": ["super+shift+l"], "command": "sublime_linter_goto_error", "args": {"direction": "next", "wrap": true} },
]
